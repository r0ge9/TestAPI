// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestAPI.Model;

#nullable disable

namespace TestAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestAPI.Model.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            Name = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 7,
                            Name = 0,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("TestAPI.Model.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 20,
                            Email = "egor.ivanovBYM@gmail.com",
                            Name = "Egor"
                        },
                        new
                        {
                            Id = 2,
                            Age = 19,
                            Email = "artem.kolyago@gmail.com",
                            Name = "Artem"
                        },
                        new
                        {
                            Id = 3,
                            Age = 16,
                            Email = "daniil.petrov@gmail.com",
                            Name = "Daniil"
                        },
                        new
                        {
                            Id = 4,
                            Age = 25,
                            Email = "arsen.petrov@gmail.com",
                            Name = "Arsen"
                        },
                        new
                        {
                            Id = 5,
                            Age = 41,
                            Email = "vova.petrov@gmail.com",
                            Name = "Vova"
                        });
                });

            modelBuilder.Entity("TestAPI.Model.Entities.Role", b =>
                {
                    b.HasOne("TestAPI.Model.Entities.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TestAPI.Model.Entities.User", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
